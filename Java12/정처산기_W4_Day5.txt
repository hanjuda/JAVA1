정보처리산업기사 취득과정, W4 Day5.

Ex1301
	[정리] 	인스턴스변수의 사용 : "참조변수."으로 접근
		클래스변수의 사용 : "클래스이름."으로 접근 가능!
				      "참조변수."으로도 접근 가능! (권장X)
	[정리]	인스턴스메서드 ... : (위와 동일)
		클래스메서드 ... : (위와 동일)

Ex1302 -> 그림 그려서 질문.
Ex1303 -> 그림 그려서 질문.

----------------------------------------------------------------------------
<< 연습 >>

Ex1304. 연습. Member클래스.
	- 인스턴스변수 : 아이디, 이름, 생년월일(yymmdd)
			String id
			String name
			String birthDate 
	(클래스 작성 ----> 별다른 언급이 없으면, private키워드를 꼭.)
	- main() : 스캐너 ---> 아이디/이름/생년월일 (자유형식으로) 입력 받아,
		   Member 객체를 생성,
		   sysout()으로 이 객체의 내용을 출력:
				출력형식 -> "__아이디___/__이름__/_생년월일_"

	(+) toString() 메서드의 작성:
		1. public 키워드를 붙여야 돼요. (나중에)
		2. 문자열을 리턴하도록 작성. 
		3. sysout(참) ===> sysout(참.toString()) 과 같음! (이해)
			ex) System.out.println(member); 

★Ex1305. 연습. String배열의 사용.   // String[] arr = new String[100];   arr[0] = "...";
	- 과일의 이름을 입력받아서(최대 100개) 배열에 저장.
	- 과일의 이름으로 "끝"을 입력하면, 지금까지 입력한 과일들을 이름을 모두 출력(출력 형식은 자유)한 후 종료.
	
	(실행결과) 과일 이름을 입력 : 사과 (엔터)
		   과일 이름을 입력 : 바나나 (엔터)
		   과일 이름을 입력 : 포도 (엔터)
		   과일 이름을 입력 : 끝 (엔터)
		   입력한 과일 -> 사과,바나나,포도
						// Hint. 문자열의 비교 : == 말고 .equals()로!

Ex1306.	클래스작성연습 문1. Author클래스, Book클래스의 작성.

---------------------------------------------------------------------------------------------------------
<< 클래스 개념확인 >> - [상속] 전까지.

1. "클래스"는 "객체"의 설계도.
2. 메모리공간은 '바이트 단위'마다 고유한 주소값을 가짐 -----> (자바) "참조값"
3. 객체를 가리킬 수 있는 변수 : "참조변수" -----------> 참조값을 가지는 변수.
4. 생성자는, 객체 생성 직후에 '필드(field)'의 값을 초기화하는 역할.
5. 생성자는, 객체 생성 직후에 "무조건" 호출됨.     // +"디폴트생성자"
6. 생성자가 객체를 생성하는 게 아님!
7. 생성자의 정의 : 클래스이름과 동일하게 / 리턴타입x / 리턴x
8. 객체 생성 표현 : "new Circle(5);"
			1) new 키워드 ----> "무조건" 객체 생성
			2) Circle --------> (설계도의 이름)
		  	3) (5) -----------> '생성자 호출표현'(생성자 파라미터에 인수 값을 전달)
9. "this" : "객 체 자 기 자 신"의 참조값 (암기)
10. 생성자가 무조건 호출되도록 ----> 그런데 개발자가 작성X ----> "디폴트생성자"
11. private/public ---> "접근제어자"(Access Modifier)
	*. [암기] 접근의 범위에 따라서 : public > ... > ... > private
12. sysout(참조변수); ----> sysout(참조변수.toString());
13. 참조변수 + "문자열" ----> 참조변수.toString() + "문자열"
14. 클래스변수, 클래스메서드 ----> 앞에 static 키워드를.
	- 클래스변수, 데이터타입 앞에 static
	- 클래스메서드, 리턴타입 앞에 static
15. 클래스변수 = "스태틱변수"
16. 클래스메서드 = "스태틱메서드"
17. 클래스변수, 클래스메서드 ----> 객체 생성과 무관!
	(참고) 클래스메서드에서는 "this" 키워드를 사용 못함!
		this : 객 체 자 기 자 신 (의 참조값)
18. 클래스변수, 클래스메서드 --> "클래스이름."으로 접근(원칙)
				 "참조변수."으로도 접근가능 (권장X)
19. 인스턴스변수, 인스턴스메서드 --> "참조변수."으로만 접근가능
20. 클래스변수, 클래스메서드 --> 객체 생성 전에도 (당연히) 사용 가능!
	(ex) Math.random() ---> 클래스메서드 --> Math클래스의 객체 생성하지 않고도 사용 가능!
21. 인스턴스메서드에서 인스턴스'멤버'에 접근 가능.   // 멤버 : 변수, 메서드
    인스턴스메서드에서 클래스'멤버'에 접근 가능 (왜? 공유의 개념이니까)
    클래스메서드에서 클래스'멤버'에 접근 가능.
    ★★★★★클래스메서드에서 인스턴스'멤버'로의 접근은 불가능 (왜? 애매하니까)

22. 객체(의 참조값)를 담을 수 있는 배열 :
	(ex) "Member[] arr = new Member[3];"
		arr[0] = new Member(__________);
		arr[1] = new Member(__________);
		arr[2] = new Member(__________);

							끝.
							NEXT = Ex1305 다시 설명.


