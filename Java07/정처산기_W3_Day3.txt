정보처리산업기사 취득과정, W3 Day3.
			
★Ex701.	사용자가 입력한 모든 정수의 합계를 출력하는 프로그램.
	단, 사용자가 0을 입력하면 (그때까지의 합계를 출력하고) 종료.
	(실행결과) 입력 : 5 (엔터)
		   입력 : 3 (엔터)
		   입력 : -10 (엔터)
		   입력 : 12 (엔터)
		   입력 : 0 (엔터)
		   지금까지 입력한 값들의 합은 10입니다.
	(실행결과) 입력 : 7 (엔터)
		   입력 : -3 (엔터)
		   입력 : 0 (엔터)
	 	   지금까지 입력한 값들의 합은 4입니다.

Ex702.	소수만 입력 후 모든 합계를 출력하는 프로그램.
	(실행결과) 소수를 입력 : 2 (엔터)
		   소수를 입력 : 7 (엔터)
		   소수를 입력 : 13 (엔터)
		   소수를 입력 : 8 (엔터)                                 // 8의 약수 : 1, 2, 4, 8 -> 소수X
		   지금까지 입력한 소수들의 합은 22입니다.		  // 소수X인 수는 더하지 마세요.

고급연습.	"Monte Carlo Method" : 확률을 이용해서 pi(원주율)를 계산.

--------------------------------------------------------------------------------------------
Scanner클래스.
	※ 구글, "java api documentation"       # 자바 매뉴얼.
	  https://docs.oracle.com/javase/8/docs/api/
	  https://docs.oracle.com/javase/7/docs/api/

1) 정수 입력
	.nextByte()
	.nextShort()
	.nextInt()
	.nextLong()
2) 실수 입력
	.nextFloat()
	.nextDouble()
3) 문자(열) 입력
	.next()		// 한 단어
	.nextLine()	// 한 문장
Ex703
Ex704
Ex705 : '입력버퍼' 이슈.

----------------------------------------------------------------
Random클래스.				// optional(선택적).

	- 난수(Random Number)
	- Check : 난수(1~5) -> Math.random() 을 이용해서 할 수 있는지?
Ex706. Math.random() 이용 -> 1 이상 5 이하의 정수를 10개 난수발생 해서 출력.

			10번 반복 {
				난수발생 : 1 ~ 5
				출력
			}

	※ n회 반복 : for(int i=1; i<=n; i++) { ... }

난수발생:
(1) Math.random() : "0.0 이상 1.0 미만"

(2) Random 클래스.
	- Random 클래스의 객체 생성 문장 : "Random rd = new Random();"
					cf) Scanner sc = new Scanner(System.in);
	- rd.nextFloat() : "0.0 이상 1.0 미만"
	- rd.nextInt() : int 타입이 가질 수 있는(=표현범위) 값을 하나 골라줌.
	- rd.nextInt(n) : 0 이상 n-1 이하의 정수 하나 골라줌.

Ex707. Random클래스를 이용해서, 3 이상 8 이하의 정수 20개를 출력.
	(고급) 위 3가지 모두를 사용.

------------------------------------------------------------------------------
배열(Array).
	- 배열이란, '데이터의 목록'을 다루는 것.
	ex) 학생 30명의 성적 리스트 / 맛집 리스트.

배열의 생성.
	- 1) 배열(객체)을 가리킬 변수를 선언 : "타입[] 변수이름;"  (ex) int[] arr;  
		cf) 일반적인 변수의 선언 : "타입 변수이름;"        (ex) int num;
	- 2) 배열(객체)을 생성해서 위 변수와 연결 : "변수이름 = new 타입[크기];"

	ex) int[] arr = new int[3];
	    arr[0] = 10;
	    arr[1] = 20;
	    arr[2] = 30;
	ex) String[] arr2 = new String[3];
	    arr2[0] = "안녕";
	    arr2[1] = "자바";
	    arr2[2] = "배열";
	    for(int i=0; i<=2; i++)
		sysout(arr2[i]);	
	고급) // arr = arr2;   // ERR.  // 가능할까????????
	ex) int[] arr3 = new int[4];
	    arr3[0] = 10;
	    arr3[1] = 20;
	    arr3[2] = 30;
	    arr3[3] = 40;
	고급) arr = arr3;     // 가능할까? 왜? 대입연산자(=) 양옆의 타입이 같으니까. (나중에)

	- 용어 : "인덱스(인덱스번호)"(index, index number)   // 0부터 시작!
		 "요소(원소)"(element)

	- 사용 : "배열이름 [ 인덱스번호 ]"
		 - 인덱스번호는 0부터 시작.
		 - 인덱스번호는 마이너스(-) 값은 쓸 수 없다 (참고)  <--------> 파이썬.
	 	 - [주의] 대괄호[ ] 안에 인덱스번호 사용시, 유효한 번호인지 꼭 확인!!!
			(ex) int[] arr4 = new int[10];
			     arr4[0] = 100;
			     ...
			     for(int i=0; i<=10; i++)
				sysout(arr4[i]);   // i가 10일 때, '오류'의 상황!

Ex709.	크기가 10인 정수형 배열을 만들고,
	여기에 10, 20, 30, 40, 50, 60, 70, 80, 90, 100을 대입 (반복문 사용).
	★★★★★1) 이 배열의 내용을 출력 (반복문 사용)     // 10 20 30 40 50 60 70 80 90 100
	1-고급) "[10, 20, 30, ...]"  (단, Arrays... 사용금지)
	★★★★★2) 모든 요소의 합을 출력
	3) (고급) '십의 자리'가 짝수인 요소들만 출력
	4) (고급) '십의 자리'가 짝수인 요소들의 부호를 (-)로 변경한 후,
		  배열 전체의 내용을 출력.

	- System.out.println( Arrays.toString(배열이름) );   // "[10, 20, 30, ...]"

Ex710.	5개의 정수를 담을 수 있는 배열을 만들고.
	난수발생(1~10) 해서 5개의 정수를 랜덤하게 배열에 채워서,
	1) 반복문을 사용해서 모든 요소를 출력 : 이 형식에 따라 - "(3 9 8 4 5)"
	2) 이 배열에서 홀수의 개수와 짝수의 개수를 출력. 
		ex) 배열이 [3, 9, 8, 4, 5] 였다면,
		    "홀수-3개, 짝수-2개"

								끝.
