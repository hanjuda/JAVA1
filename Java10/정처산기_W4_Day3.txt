정보처리산업기사 취득과정, W4 Day3.

[TODAY] "프로그래밍언어활용" : 클래스 (1)
	- 다음 주 금요일 16:00~18:00 <내부평가>
	- 다음 주 월,화요일 내부평가대비 - 학습모듈 들고오세요.
--------------------------------------------------------------
지역변수(local variable)

자바에서 변수 : "int num;"
	①지역변수 ②....변수 ③....변수

Ex1101.

------------------------------------------------------------------
★메서드 오버로딩(Method Overloading) <---------> 오버라이딩 (나중에)
	- 동일한 메서드 이름을 사용 가능! (주의: '중복')
	- ★"파라미터의 개수가 다르거나 타입이 다르거나" (파.개.타.)
	- [주의] '리턴타입' X
Ex1102.

------------------------------------------------------------------
클래스Class.			// (클래스 = 변수 + 메서드)
				// (객체 = 변수 + 메서드)
	- "객체", "클래스" 의 개념.
	- 클래스 : 객체의 설계도  (ex. 자동차 설계도)
	  객체 : 설계도로 만들어낸 실체 (ex. 자동차#1, 자동차#2, 자동차#3, ...)

	  ※ 클래스 ----> 사실은 '분류'라는 뜻.
	  
	ex) 스캐너 객체 생성 ----> Scanner sc = new Scanner(System.in);
				   ----> 정수 입력 : int num = sc.nextInt();
		- "new 설계도의이름" 
		  즉, "new 클래스이름"
		- sc = new 설계도의이름 ----> sc로 이 객체를 사용.
		- "Scanner sc" --> 변수의 선언 "타입 변수이름"
			- ① Scanner 객체를 가리킬 수 있는 변수!
			  ② sc ---> "참조변수" ("참조값"(주소값)을 가지는 변수)

[정리]	참조변수 : 변수 선언시, (타입 변수이름) -> 타입 자리에 클래스이름이 오면,
						   참조변수를 선언한 것!

	ex) Random클래스.
		- 객체 생성 : Random rd = new Random();
			- rd.nextFloat()
			- rd.nextInt()
			- rd.nextInt(정수값)

Ex1103. 첫번째 클래스

Ex1104.	원(circle)의 반지름 정보와 넓이를 구하여 출력하는 기능을 가진
	클래스 Circle을 정의하는 문제.
	- 변수 : 반지름(r) - 정수값.
	- 메서드 : showArea() - "반지름이 __인 원의 넓이는 ___입니다"
				// 원의 넓이 : 3.14 * 반지름 * 반지름
				//             Math.PI * 반지름 * 반지름
	- main() : 반지름 값을 키보드입력 받아서,
		   원 객체 생성 후 반지름 값을 객체에 잘 담아서,
		   이 객체의 '원의 넓이 출력하는 기능'을 호출해서
		   원의 넓이를 출력해보세요.
	(실행결과) 원의 반지름 값을 입력하세요 :  10 (엔터)
		   반지름이 10인 원의 넓이는 314.1592....입니다"

Ex1105. Circle2 클래스의 작성.						
	- 변수 : 반지름(r, 정수) 
		 중심점의 x좌표(x, 정수)
		 중심점의 y좌표(y, 정수)
	- 메서드 : area() = 넓이를 계산해서 리턴(리턴타입은 double)

	main() :
	- 반지름이 5 이고, 중심점의 좌표가 (x,y) = (1,1) 인 원(Circle2) 객체를 생성해서,
	  아래와 같이 출력:

	(실행결과) "원2 : 반지름이 5이고 중심점 좌표가 (1,1)인 원(넓이 : ____)입니다."

-------------------------------------------------------------------------
생성자(Constructor):
	1) "생성자는 객체를 생성하는 게 아님!"
	2) 객체가 생성된 직후에 반드시 호출되도록 되어 있는 '일종의 메서드'
	4) 클래스이름과 동일한 이름으로 / 리턴타입 없음 / 리턴하지도 않음. 
	
객체 생성 문장: "Scanner sc = new Scanner(System.in);"
	1) 참조변수의 선언
	2) 어떤 클래스(설계도)로 객체 생성할건지?
	3) 생성자의 호출은 어떻게?

Ex1106. 생성자

	★★★★★ this키워드 : "객체 자기 자신(의 참조값)" (나중에)
	--------> 생성자의 작성은 기계적으로(취업하실 때까지)

Ex1107. 생성자 작성은 기계적으로 / this키워드를 사용.
	"생성자 오버로딩이 가능함!"

Ex1108. 연습.
	클래스 Numbers의 작성.
	- 변수 : int a와 int b
	- 생성자 : ...(기계적으로 작성)
	- 메서드 : show() --> 두 수의 (1) 합 (2) 차 (3) 곱 을 출력.

	main():
		Numbers numbers = new Numbers(10, 20);
		numbers.show();   // "합=30, 차=-10, 곱=200"

Ex1109. 연습.
	클래스 Numbers2의 작성.
	- 변수 : int a,b,c
	- 생성자 : (알아서)
	- 메서드 : showSum() -> a와 b와 c의 합계를 출력.
		   showMax() -> a,b,c 중 최대값을 출력.

	main():
		Numbers2 numbers2 = new Numbers2(1,3,5);
		numbers2.showSum();   	// "합=9"
		numbers2.showMax();	// "최대값=5"


								끝.

