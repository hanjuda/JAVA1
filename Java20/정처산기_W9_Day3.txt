정처산기 W9 Day3

[TODAY]	"데이터 입출력 구현" 내부평가대비
	자바 : 쓰레드~
	프로젝트

이번 주까지, DB설계 및 테스트(JDBC/모든 시나리오) 완료.
다음 주부터는 화면 단.

---------------------------------------------------------------------
내부평가대비 : tkprof.

---------------------------------------------------------------------
(참고) Thread(쓰레드)

Ex 필요성:
	- 타자프로그램 -> Scanner사용해 : 엔터를 누를 때까지 대기...
	- 두뇌운동게임 ----> 사칙연산 ----> 4 x 3 = ___ // Game Over
	- 안드로이드) 앱 --> 메인화면Thread vs 인터넷통신Thread ...

우리는 웹개발자.
	- 개념은 O. 쓸 일이...

Ex2201. 방식#1.
Ex2202. 방식#2.

[정리]	쓰레드 사용 방식 두 가지 :
	1) Thread 클래스를 상속하는 방법
	   - extends Thread 하는 클래스를 정의.
	   - 그 클래스 안에 run() 메서드를 오버라이드.
	   - 그 클래스를 객체 생성 후 .start() 호출.	   
		--> 그러면 적절한 시점에 run() 실행이 시작됨.

	2) Runnable 인터페이스를 사용하는 방법
	   - implements Runnable 하는 클래스를 정의.
	   - 그 클래스 안에 run() 메서드를 오버라이드.
	   - 그 클래스를 객체 생성 후 객체의 참조값을
	     Thread 클래스의 객체 생성시 생성자 파라미터에 전달.
	   - 생성된 Thread 객체의 .start() 호출.
		--> 그러면 적절한 시점에 run() 실행이 시작됨.

※ 위2) -----> 	class A extends P { ... }
		내가 이 A클래스를 쓰레드클래스로 만들려 해...
		class A extends P, Thread { ... } ----> 자바는 다중상속 금지. ERR.

"Main-Thread" : main() 메서드를 실행시키는 쓰레드.

연습1. 문자열을 입력받아서,
	1초마다 한번씩 출력 (다섯번)

연습2. 문자열을 2개 입력(s1,s2) 받아서,
	1초마다 s1과 s2를 출력 (다섯번)

연습3(고급). 사칙연산 게임. (10초 안에 다섯 문제)
	(실행결과)					
		3 + 5
		>> 8 (엔터)
		5 * 7
		>> 35 (엔터)
		3 - 1
		>> ...
		...
		...
		--- Game Clear ! ---
		--- 10초가 지났습니다. Game Over ---

-------------------------------------------------------------------------------------
쓰레드 

"Single-threaded Programming"
"Multi-threaded Programming"
	-> "동기화(Synchronization) 문제"를 조심!
	- 자바는 메모리 영역을 3가지로 구분해서 사용:
		1) 힙 영역 : 객체
		2) 스택 영역 : 지역변수 등
		3) 클래스 영역 (=메서드영역) : 클래스

	- 이 중에서, 쓰레드가 공유하는 영역이 2가지:
		1) 힙 영역
		2) 클래스 영역

	- 따라서, 모든 쓰레드가 공유해야 할 변수가 있다면:
		1) 객체로 만들어서 참조값을 공유
		2) 클래스변수

Ex2203. 동기화 문제 --> "동기화 메서드" 방식으로 해결.
						cf. "동기화 블럭" 방식 = (고급)

---------------------------------------------------------------------------------------------
프로젝트.
	- 조별 진행률 기록 (공유폴더/"[조별] DB테스트진행률"에 파일생성)



























